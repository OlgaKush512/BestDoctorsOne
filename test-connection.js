// –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –º–µ–∂–¥—É —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–æ–º –∏ –±—ç–∫–µ–Ω–¥–æ–º
const axios = require('axios');

async function testConnection() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...\n');
  
  // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ health endpoint
  try {
    console.log('1Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ health endpoint...');
    const healthResponse = await axios.get('http://localhost:5000/health');
    console.log('‚úÖ Health endpoint —Ä–∞–±–æ—Ç–∞–µ—Ç:', healthResponse.data);
  } catch (error) {
    console.log('‚ùå Health endpoint –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', error.message);
  }
  
  // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ API endpoint —á–µ—Ä–µ–∑ –ø—Ä—è–º–æ–π –∑–∞–ø—Ä–æ—Å
  try {
    console.log('\n2Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API endpoint –Ω–∞–ø—Ä—è–º—É—é...');
    const directResponse = await axios.post('http://localhost:5000/api/doctors/search', {
      specialty: 'Cardiologue',
      location: 'Paris',
      date: '2024-01-15',
      additionalRequirements: 'Test'
    });
    console.log('‚úÖ –ü—Ä—è–º–æ–π API –∑–∞–ø—Ä–æ—Å —Ä–∞–±–æ—Ç–∞–µ—Ç');
  } catch (error) {
    console.log('‚ùå –ü—Ä—è–º–æ–π API –∑–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', error.message);
    if (error.response) {
      console.log('üìã Status:', error.response.status);
      console.log('üìã Data:', error.response.data);
    }
  }
  
  // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —á–µ—Ä–µ–∑ Vite proxy (–µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω)
  try {
    console.log('\n3Ô∏è‚É£ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Vite proxy...');
    const proxyResponse = await axios.post('http://localhost:3000/api/doctors/search', {
      specialty: 'Cardiologue',
      location: 'Paris',
      date: '2024-01-15',
      additionalRequirements: 'Test'
    });
    console.log('‚úÖ Vite proxy —Ä–∞–±–æ—Ç–∞–µ—Ç');
  } catch (error) {
    console.log('‚ùå Vite proxy –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç:', error.message);
    if (error.response) {
      console.log('üìã Status:', error.response.status);
    }
  }
}

testConnection();
